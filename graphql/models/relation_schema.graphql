extend type Query {
    relationSchemas: [RelationSchema!]! @all @orderBy(column: "created_at", direction: DESC)
    relationSchema(id: UUID! @eq @rules(apply: ["exists:relation_schemas,id"])): RelationSchema! @find
}

extend type Mutation {
    publishRelationSchema(id: UUID! @rules(apply: ["exists:relation_schemas,id"])): RelationSchema!
}

type RelationSchema {
    id                   : UUID!
    isPublished          : Boolean!                 @rename(attribute: "is_published")
    expiredAt            : DateTime                 @rename(attribute: "expired_at")
    createdAt            : DateTime!                @rename(attribute: "created_at")
    updatedAt            : DateTime!                @rename(attribute: "updated_at")

    matterRelationSchemas: [MatterRelationSchema!]! @hasMany
    annotations          : [Annotation!]!           @hasMany
}
